version: "3"

services:
  prod-app:
    build:
      context: .
      args:
        NODE_ENV: production
    container_name: prod-node-app
    ports:
      - ${PORTA}:${PORTA}
    environment:
      - NODE_ENV=production
    networks:
      - mongo-compose-network
    links:
      - db
      - redis
    depends_on:
      - db
      - redis
      - nginx

  db:
    image: mongo:latest
    container_name: mongo-prod-server
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - 27017:27017
    networks:
      - mongo-compose-network
    volumes:
      - mongo-db:/data/db

  redis:
    image: redis
    container_name: redis-prod-server
    networks:
      - mongo-compose-network

  nginx:
    image: nginx:stable-alpine
    container_name: nginx-dev-server
    ports:
      - "3000:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - mongo-compose-network

networks:
  mongo-compose-network:
    driver: bridge

volumes:
  mongo-db:
